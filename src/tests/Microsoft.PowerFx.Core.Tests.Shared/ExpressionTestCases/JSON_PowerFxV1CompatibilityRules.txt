#SETUP: PowerFxV1CompatibilityRules
#SETUP: EnableJsonFunctions

>> JSON(ParseJSON("{}"))
"{}"

>> JSON(ParseJSON("[]"))
"[]"

>> JSON(ParseJSON("1"))
"1"

>> JSON(ParseJSON("1.77"))
"1.77"

>> JSON(ParseJSON("-871"))
"-871"

>> JSON(ParseJSON("""John"""))
"""John"""

>> JSON(ParseJSON("true"))
"true"

>> JSON(ParseJSON("false"))
"false"

>> JSON(ParseJSON("{""a"": 1}"))
"{""a"":1}"

>> JSON(ParseJSON("{""a"": ""x""}"))
"{""a"":""x""}"

>> JSON(ParseJSON("[1]"))
"[1]"

>> JSON(ParseJSON("{""a"": 1.5}"))
"{""a"":1.5}"

>> JSON(ParseJSON("[1.5]"))
"[1.5]"

>> JSON(ParseJSON("{""a"":[1]}"))
"{""a"":[1]}"

>> JSON(ParseJSON("[{""a"": -17}]"))
"[{""a"":-17}]"

>> JSON(ParseJSON("[true, false]"))
"[true,false]"

>> JSON(ParseJSON("[""True"", ""False""]"))
"[""True"",""False""]"

// Round-trip is not guaranteed
>> JSON(ParseJSON("   {  ""a"" :  1 }  "))
"{""a"":1}"

>> JSON(ParseJSON("{""a"": {""a"": 1}}"))
"{""a"":{""a"":1}}"

// Depth 21
>> JSON(ParseJSON("{""a"": {""a"": {""a"": {""a"": {""a"": {""a"": {""a"": {""a"": {""a"": {""a"": {""a"": {""a"": {""a"": {""a"": {""a"": {""a"": {""a"": {""a"": {""a"": {""a"": {""a"": 1}}}}}}}}}}}}}}}}}}}}}"))
Error({Kind:ErrorKind.InvalidArgument})

>> JSON(ParseJSON("[[1]]"))
"[[1]]"

// Depth 21
>> JSON(ParseJSON("[[[[[[[[[[[[[[[[[[[[[1]]]]]]]]]]]]]]]]]]]]]"))
Error({Kind:ErrorKind.InvalidArgument})

>> JSON(Decimal(ParseJSON("123456789012345.6789012345678")))
"123456789012345.6789012345678"

>> JSON(ParseJSON("123456789012345.6789012345678"))
"123456789012345.6789012345678"

// Round-trip is not guaranteed - escaped characters that don't need escaping will not be re-escaped when JSON-ified
>> JSON(ParseJSON("""\u0048\u0065\u006c\u006c\u006f"""))
"""Hello"""

>> JSON(ParseJSON("1e300"))
"1e300"

>> JSON(ParseJSON("1111111111111111111111111111111.2222222222222222222222222222222222"))
"1111111111111111111111111111111.2222222222222222222222222222222222"
