#SETUP: PowerFxV1CompatibilityRules,StronglyTypedBuiltinEnums

>> Join(
  Table({Id:"AAA111",Name:"Contoso",Country:"USA"},
  {Id:"BBB222",Name:"Fabrikam",Country:"CAN"},
  {Id:"EEE555",Name:"ACME INC.",Country:"MEX"},
  {Id:"FFF666",Name:"Dunder Mifflin",Country:"USA"}),
  Table({SupplierId:"AAA111", Fruit:"Grapes", Price:220, Purchase:Date(2015,10,1), RowId:1},
  {SupplierId:"BBB222", Fruit:"Lemons", Price:31, Purchase:Date(2015,10,1), RowId:2},
  {SupplierId:"AAA111", Fruit:"Lemons", Price:29, Purchase:Date(2015,10,2), RowId:3},
  {SupplierId:"AAA111", Fruit:"Grapes", Price:210, Purchase:Date(2015,10,2), RowId:4},
  {SupplierId:"BBB222", Fruit:"Lemons", Price:30, Purchase:Date(2015,10,3), RowId:5},
  {SupplierId:"AAA111", Fruit:"Bananas", Price:12, Purchase:Date(2015,10,3), RowId:6},
  {SupplierId:"CCC333", Fruit:"Apples", Price:15, Purchase:Date(2015,12,3), RowId:7},
  {SupplierId:"DDD444", Fruit:"Mangos", Price:30, Purchase:Date(2016,12,3), RowId:8}),
  LeftRecord.Id = RightRecord.SupplierId, JoinType.Inner)
Table({Country:"USA",Fruit:"Grapes",Id:"AAA111",Name:"Contoso",Price:220,Purchase:Date(2015,10,1),RowId:1,SupplierId:"AAA111"},{Country:"USA",Fruit:"Lemons",Id:"AAA111",Name:"Contoso",Price:29,Purchase:Date(2015,10,2),RowId:3,SupplierId:"AAA111"},{Country:"USA",Fruit:"Grapes",Id:"AAA111",Name:"Contoso",Price:210,Purchase:Date(2015,10,2),RowId:4,SupplierId:"AAA111"},{Country:"USA",Fruit:"Bananas",Id:"AAA111",Name:"Contoso",Price:12,Purchase:Date(2015,10,3),RowId:6,SupplierId:"AAA111"},{Country:"CAN",Fruit:"Lemons",Id:"BBB222",Name:"Fabrikam",Price:31,Purchase:Date(2015,10,1),RowId:2,SupplierId:"BBB222"},{Country:"CAN",Fruit:"Lemons",Id:"BBB222",Name:"Fabrikam",Price:30,Purchase:Date(2015,10,3),RowId:5,SupplierId:"BBB222"})

>> Join(
  Table({Id:"AAA111",Name:"Contoso",Country:"USA"},
  {Id:"BBB222",Name:"Fabrikam",Country:"CAN"},
  {Id:"EEE555",Name:"ACME INC.",Country:"MEX"},
  {Id:"FFF666",Name:"Dunder Mifflin",Country:"USA"}),
  Table({SupplierId:"AAA111", Fruit:"Grapes", Price:220, Purchase:Date(2015,10,1), RowId:1},
  {SupplierId:"BBB222", Fruit:"Lemons", Price:31, Purchase:Date(2015,10,1), RowId:2},
  {SupplierId:"AAA111", Fruit:"Lemons", Price:29, Purchase:Date(2015,10,2), RowId:3},
  {SupplierId:"AAA111", Fruit:"Grapes", Price:210, Purchase:Date(2015,10,2), RowId:4},
  {SupplierId:"BBB222", Fruit:"Lemons", Price:30, Purchase:Date(2015,10,3), RowId:5},
  {SupplierId:"AAA111", Fruit:"Bananas", Price:12, Purchase:Date(2015,10,3), RowId:6},
  {SupplierId:"CCC333", Fruit:"Apples", Price:15, Purchase:Date(2015,12,3), RowId:7},
  {SupplierId:"DDD444", Fruit:"Mangos", Price:30, Purchase:Date(2016,12,3), RowId:8}),
  LeftRecord.Id = RightRecord.SupplierId, JoinType.Left)
Table({Country:"USA",Fruit:"Grapes",Id:"AAA111",Name:"Contoso",Price:220,Purchase:Date(2015,10,1),RowId:1,SupplierId:"AAA111"},{Country:"USA",Fruit:"Lemons",Id:"AAA111",Name:"Contoso",Price:29,Purchase:Date(2015,10,2),RowId:3,SupplierId:"AAA111"},{Country:"USA",Fruit:"Grapes",Id:"AAA111",Name:"Contoso",Price:210,Purchase:Date(2015,10,2),RowId:4,SupplierId:"AAA111"},{Country:"USA",Fruit:"Bananas",Id:"AAA111",Name:"Contoso",Price:12,Purchase:Date(2015,10,3),RowId:6,SupplierId:"AAA111"},{Country:"CAN",Fruit:"Lemons",Id:"BBB222",Name:"Fabrikam",Price:31,Purchase:Date(2015,10,1),RowId:2,SupplierId:"BBB222"},{Country:"CAN",Fruit:"Lemons",Id:"BBB222",Name:"Fabrikam",Price:30,Purchase:Date(2015,10,3),RowId:5,SupplierId:"BBB222"},{Country:"MEX",Fruit:Blank(),Id:"EEE555",Name:"ACME INC.",Price:Blank(),Purchase:Blank(),RowId:Blank(),SupplierId:Blank()},{Country:"USA",Fruit:Blank(),Id:"FFF666",Name:"Dunder Mifflin",Price:Blank(),Purchase:Blank(),RowId:Blank(),SupplierId:Blank()})

>> Join(
  Table({Id:"AAA111",Name:"Contoso",Country:"USA"},
  {Id:"BBB222",Name:"Fabrikam",Country:"CAN"},
  {Id:"EEE555",Name:"ACME INC.",Country:"MEX"},
  {Id:"FFF666",Name:"Dunder Mifflin",Country:"USA"}),
  Table({SupplierId:"AAA111", Fruit:"Grapes", Price:220, Purchase:Date(2015,10,1), RowId:1},
  {SupplierId:"BBB222", Fruit:"Lemons", Price:31, Purchase:Date(2015,10,1), RowId:2},
  {SupplierId:"AAA111", Fruit:"Lemons", Price:29, Purchase:Date(2015,10,2), RowId:3},
  {SupplierId:"AAA111", Fruit:"Grapes", Price:210, Purchase:Date(2015,10,2), RowId:4},
  {SupplierId:"BBB222", Fruit:"Lemons", Price:30, Purchase:Date(2015,10,3), RowId:5},
  {SupplierId:"AAA111", Fruit:"Bananas", Price:12, Purchase:Date(2015,10,3), RowId:6},
  {SupplierId:"CCC333", Fruit:"Apples", Price:15, Purchase:Date(2015,12,3), RowId:7},
  {SupplierId:"DDD444", Fruit:"Mangos", Price:30, Purchase:Date(2016,12,3), RowId:8}),
  LeftRecord.Id = RightRecord.SupplierId, JoinType.Right)
Table({Country:"USA",Fruit:"Grapes",Id:"AAA111",Name:"Contoso",Price:220,Purchase:Date(2015,10,1),RowId:1,SupplierId:"AAA111"},{Country:"USA",Fruit:"Lemons",Id:"AAA111",Name:"Contoso",Price:29,Purchase:Date(2015,10,2),RowId:3,SupplierId:"AAA111"},{Country:"USA",Fruit:"Grapes",Id:"AAA111",Name:"Contoso",Price:210,Purchase:Date(2015,10,2),RowId:4,SupplierId:"AAA111"},{Country:"USA",Fruit:"Bananas",Id:"AAA111",Name:"Contoso",Price:12,Purchase:Date(2015,10,3),RowId:6,SupplierId:"AAA111"},{Country:"CAN",Fruit:"Lemons",Id:"BBB222",Name:"Fabrikam",Price:31,Purchase:Date(2015,10,1),RowId:2,SupplierId:"BBB222"},{Country:"CAN",Fruit:"Lemons",Id:"BBB222",Name:"Fabrikam",Price:30,Purchase:Date(2015,10,3),RowId:5,SupplierId:"BBB222"},{Country:Blank(),Fruit:"Apples",Id:Blank(),Name:Blank(),Price:15,Purchase:Date(2015,12,3),RowId:7,SupplierId:"CCC333"},{Country:Blank(),Fruit:"Mangos",Id:Blank(),Name:Blank(),Price:30,Purchase:Date(2016,12,3),RowId:8,SupplierId:"DDD444"})

>> Join(
  Table({Id:"AAA111",Name:"Contoso",Country:"USA"},
  {Id:"BBB222",Name:"Fabrikam",Country:"CAN"},
  {Id:"EEE555",Name:"ACME INC.",Country:"MEX"},
  {Id:"FFF666",Name:"Dunder Mifflin",Country:"USA"}),
  Table({SupplierId:"AAA111", Fruit:"Grapes", Price:220, Purchase:Date(2015,10,1), RowId:1},
  {SupplierId:"BBB222", Fruit:"Lemons", Price:31, Purchase:Date(2015,10,1), RowId:2},
  {SupplierId:"AAA111", Fruit:"Lemons", Price:29, Purchase:Date(2015,10,2), RowId:3},
  {SupplierId:"AAA111", Fruit:"Grapes", Price:210, Purchase:Date(2015,10,2), RowId:4},
  {SupplierId:"BBB222", Fruit:"Lemons", Price:30, Purchase:Date(2015,10,3), RowId:5},
  {SupplierId:"AAA111", Fruit:"Bananas", Price:12, Purchase:Date(2015,10,3), RowId:6},
  {SupplierId:"CCC333", Fruit:"Apples", Price:15, Purchase:Date(2015,12,3), RowId:7},
  {SupplierId:"DDD444", Fruit:"Mangos", Price:30, Purchase:Date(2016,12,3), RowId:8}),
  LeftRecord.Id = RightRecord.SupplierId, JoinType.Full)
Table({Country:"USA",Fruit:"Grapes",Id:"AAA111",Name:"Contoso",Price:220,Purchase:Date(2015,10,1),RowId:1,SupplierId:"AAA111"},{Country:"USA",Fruit:"Lemons",Id:"AAA111",Name:"Contoso",Price:29,Purchase:Date(2015,10,2),RowId:3,SupplierId:"AAA111"},{Country:"USA",Fruit:"Grapes",Id:"AAA111",Name:"Contoso",Price:210,Purchase:Date(2015,10,2),RowId:4,SupplierId:"AAA111"},{Country:"USA",Fruit:"Bananas",Id:"AAA111",Name:"Contoso",Price:12,Purchase:Date(2015,10,3),RowId:6,SupplierId:"AAA111"},{Country:"CAN",Fruit:"Lemons",Id:"BBB222",Name:"Fabrikam",Price:31,Purchase:Date(2015,10,1),RowId:2,SupplierId:"BBB222"},{Country:"CAN",Fruit:"Lemons",Id:"BBB222",Name:"Fabrikam",Price:30,Purchase:Date(2015,10,3),RowId:5,SupplierId:"BBB222"},{Country:"USA",Fruit:Blank(),Id:"FFF666",Name:"Dunder Mifflin",Price:Blank(),Purchase:Blank(),RowId:Blank(),SupplierId:Blank()},{Country:"MEX",Fruit:Blank(),Id:"EEE555",Name:"ACME INC.",Price:Blank(),Purchase:Blank(),RowId:Blank(),SupplierId:Blank()},{Country:Blank(),Fruit:"Apples",Id:Blank(),Name:Blank(),Price:15,Purchase:Date(2015,12,3),RowId:7,SupplierId:"CCC333"},{Country:Blank(),Fruit:"Mangos",Id:Blank(),Name:Blank(),Price:30,Purchase:Date(2016,12,3),RowId:8,SupplierId:"DDD444"})

>> Join(If(false,Table({a:1})),If(false,Table({b:1})),true)
Blank()


// Errors

// Duplicated column names
>> Join(
  Table({Id:"AAA111",Name:"Contoso",Country:"USA"},
  {Id:"BBB222",Name:"Fabrikam",Country:"CAN"},
  {Id:"EEE555",Name:"ACME INC.",Country:"MEX"},
  {Id:"FFF666",Name:"Dunder Mifflin",Country:"USA"}),
  Table({SupplierId:"AAA111", Fruit:"Grapes", Price:220, Purchase:Date(2015,10,1), Id:1},
  {SupplierId:"BBB222", Fruit:"Lemons", Price:31, Purchase:Date(2015,10,1), Id:2},
  {SupplierId:"AAA111", Fruit:"Lemons", Price:29, Purchase:Date(2015,10,2), Id:3},
  {SupplierId:"AAA111", Fruit:"Grapes", Price:210, Purchase:Date(2015,10,2), Id:4},
  {SupplierId:"BBB222", Fruit:"Lemons", Price:30, Purchase:Date(2015,10,3), Id:5},
  {SupplierId:"AAA111", Fruit:"Bananas", Price:12, Purchase:Date(2015,10,3), Id:6},
  {SupplierId:"CCC333", Fruit:"Apples", Price:15, Purchase:Date(2015,12,3), Id:7},
  {SupplierId:"DDD444", Fruit:"Mangos", Price:30, Purchase:Date(2016,12,3), Id:8}),
  LeftRecord.Id = RightRecord.SupplierId, JoinType.Inner)
Errors: Error 9-209: Data sources can't union due to duplicated columns: 'Id'.|Error 0-4: The function 'Join' has some invalid arguments.

// Invalid arguments
>> Join( 
  1/0,
  Table({SupplierId:"AAA111", Fruit:"Grapes", Price:220, Purchase:Date(2015,10,1), RowId:1}, 
  {SupplierId:"BBB222", Fruit:"Lemons", Price:31, Purchase:Date(2015,10,1), RowId:2}, 
  {SupplierId:"AAA111", Fruit:"Lemons", Price:29, Purchase:Date(2015,10,2), RowId:3}, 
  {SupplierId:"AAA111", Fruit:"Grapes", Price:210, Purchase:Date(2015,10,2), RowId:4}, 
  {SupplierId:"BBB222", Fruit:"Lemons", Price:30, Purchase:Date(2015,10,3), RowId:5}, 
  {SupplierId:"AAA111", Fruit:"Bananas", Price:12, Purchase:Date(2015,10,3), RowId:6}, 
  {SupplierId:"CCC333", Fruit:"Apples", Price:15, Purchase:Date(2015,12,3), RowId:7}, 
  {SupplierId:"DDD444", Fruit:"Mangos", Price:30, Purchase:Date(2016,12,3), RowId:8}), 
  LeftRecord.Id = RightRecord.SupplierId, JoinType.Full)
Errors: Error 10-11: Invalid argument type.|Error 0-4: The function 'Join' has some invalid arguments.|Error 731-741: Name isn't valid. 'LeftRecord' isn't recognized.|Error 741-744: The '.' operator cannot be used on Error values.|Error 747-758: Name isn't valid. 'RightRecord' isn't recognized.|Error 758-769: The '.' operator cannot be used on Error values.|Error 745-746: Incompatible types for comparison. These types can't be compared: Error, Error.

>> Join(
  Table({Id:"AAA111",Name:"Contoso",Country:"USA"},
  {Id:"BBB222",Name:"Fabrikam",Country:"CAN"},
  {Id:"EEE555",Name:"ACME INC.",Country:"MEX"},
  {Id:"FFF666",Name:"Dunder Mifflin",Country:"USA"}),
  Table({SupplierId:"AAA111", Fruit:"Grapes", Price:220, Purchase:Date(2015,10,1), RowId:1},
  {SupplierId:"BBB222", Fruit:"Lemons", Price:31, Purchase:Date(2015,10,1), RowId:2},
  {SupplierId:"AAA111", Fruit:"Lemons", Price:29, Purchase:Date(2015,10,2), RowId:3},
  {SupplierId:"AAA111", Fruit:"Grapes", Price:210, Purchase:Date(2015,10,2), RowId:4},
  {SupplierId:"BBB222", Fruit:"Lemons", Price:30, Purchase:Date(2015,10,3), RowId:5},
  {SupplierId:"AAA111", Fruit:"Bananas", Price:12, Purchase:Date(2015,10,3), RowId:6},
  {SupplierId:"CCC333", Fruit:"Apples", Price:15, Purchase:Date(2015,12,3), RowId:7},
  {SupplierId:"DDD444", Fruit:"Mangos", Price:30, Purchase:Date(2016,12,3), RowId:8}),
  LeftRecord.Id = RightRecord.SupplierId, If(true,JoinType.Inner))
Errors: Error 960-983: Expected plain 'JoinType' enum value. Different enums or passing it throught another function is not supported i.e. Join(..., If(true, JoinType.Inner, JoinType.Full)).|Error 0-4: The function 'Join' has some invalid arguments.

>> Join(Table({a:1},{a:1}),Table({b:1},{b:2}),1/0)
Table(Error({Kind:ErrorKind.Div0}),Error({Kind:ErrorKind.Div0}),Error({Kind:ErrorKind.Div0}),Error({Kind:ErrorKind.Div0}))

// Untyped blanks are not allowed.
>> Join(Blank(),Blank(),true)
Errors: Error 5-12: Invalid argument type.|Error 0-4: The function 'Join' has some invalid arguments.

